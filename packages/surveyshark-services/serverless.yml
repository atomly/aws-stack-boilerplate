service: surveyshark-services

plugins:
  - serverless-pseudo-parameters
  - serverless-dotenv-plugin
  - serverless-offline

package:
  individually: true

custom:
  scripts:
    hooks:
      'before:package:createDeploymentArtifacts': npm run build
  projectName: SurveySharkServices
  stage: ${{opt:stage, "dev"}}
  region: ${{opt:region, "us-east-1"}}
  profile:
    dev: atomly_dev
    prod: atomly_prod
  deploymentBucket:
    dev: atomly-dev-serverless-deployment-bucket
    prod: atomly-prod-serverless-deployment-bucket
  tags:
    Project: ${{self:custom.projectName}}
    Stage: ${{self:custom.stage}}
  dotenv:
    basePath: ./
    logging: true

provider:
  name: aws
  apiKeys:
    - ${{self:custom.projectName}}-apiKey-${{self:custom.stage}}
  runtime: nodejs12.x
  stage: ${{self:custom.stage}}
  region: ${{self:custom.region}}
  profile: ${{self:custom.profile.${{self:custom.stage}}}}
  timeout: 120
  memorySize: 512
  deploymentBucket: ${{self:custom.deploymentBucket.${{self:custom.stage}}}}
  versionFunctions: false # Optional function versioning
  variableSyntax: "\\${{([ ~:a-zA-Z0-9._\\'\",\\-\\/\\(\\)]+?)}}"
  stackTags: ${{self:custom.tags}}
  environment:
    STAGE: ${{self:custom.stage}}

functions:
  api:
    name: ${{self:custom.projectName}}-API-${{self:custom.stage}} # Deployed Lambda name
    description: QR generator for the Fill Surveys URLs.
    handler: dist/src/handlers/surveyshark_services.handler
    tags: ${{self:custom.tags}} 
    timeout: 30
    memorySize: 512
    events:
      - http:
          path: /
          method: any
          private: true
          cors: true
      - http:
          method: any
          path: /{proxy+}
          private: true
          cors: true
